{"version":3,"sources":["assets/portraits/torben.jpg","assets/portraits/antje.jpg","assets/portraits/opa.jpg","constants/styles.js","components/App/App.js","components/General/Icon.js","components/General/Buttons/Animations.js","components/General/Buttons/IconButton.js","components/Overview/Task/ItemActions.jsx","queries/modal.js","components/Overview/Task/ItemActionsContainer.js","utils/time.js","components/Overview/Task/ProgressBar.jsx","constants/global.js","components/Overview/Task/Subtitles.jsx","components/Overview/Task/Task.jsx","components/Overview/Overview.jsx","queries/task.js","components/Overview/OverviewContainer.js","components/Modals/Base/ModalWrapper.js","components/Modals/Base/ModalBackdrop.js","components/Modals/Base/Modal.js","components/Modals/Base/ModalHeader.js","components/Modals/FinishTask/UserCard.js","components/Modals/FinishTask/FinishTask.jsx","queries/user.js","components/Modals/FinishTask/FinishTaskContainer.js","components/Modals/MutateTask/IntervalSelection.js","components/Modals/MutateTask/ButtonRow.jsx","components/Modals/MutateTask/MutateTask.jsx","utils/apollo.js","components/Modals/MutateTask/CreateTaskContainer.js","components/Modals/MutateTask/UpdateTaskContainer.js","components/Modals/ModalsContainer.js","components/Modals/Modals.jsx","components/AddTaskButton/AddTaskButton.jsx","components/AddTaskButton/AddTaskButtonContainer.js","constants/materialStyles.js","components/App/App.jsx","serviceWorker.js","resolvers/index.js","index.js","constants/api.js"],"names":["module","exports","__webpack_require__","p","colors","styled","div","_templateObject","IconWrapper","Icon_templateObject","IconHeight","_templateObject2","IconButton","_ref","icon","color","onClick","className","_ref$size","size","react_default","a","createElement","material_icons_react_default","ButtonAnimation","css","Animations_templateObject","IconButtonComponent","Icon","IconButton_templateObject","ItemActionsWrapper","ItemActions_templateObject","ItemActions","openModal","taskId","name","variables","payload","_id","Buttons_IconButton","GET_CURRENT_MODAL","gql","modal_templateObject","CLOSE_MODAL","modal_templateObject2","OPEN_MODAL","_templateObject3","compose","graphql","getColorFromProgress","progress","slicedProgress","Math","min","hue","minLight","light","concat","ProgressBarWrapper","ProgressBar_templateObject","ContdownBar","ProgressBar_templateObject2","RemainingTime","attrs","props","style","width","backgroundColor","ProgressBar_templateObject3","ProgressBar","TIME_UNITS","DAY","WEEK","MONTH","TIME_MAPPING","_TIME_MAPPING","Object","defineProperty","DEFAULT_INTERVAL","intervalUnit","intervalCount","getIntervalInMillies","String","intervalMap","j","values","interval","getIntervalInUnits","SubtitlesWrapper","Subtitles_templateObject","Subtitle","Subtitles_templateObject2","Substring","Subtitles_templateObject3","bold","DATE_FORMATTING_OPTIONS","weekday","month","day","DATE_HOUR_FORMATTING_OPTIONS","objectSpread","hour","minute","Subtitles","lastDone","dateFormattingOptions","Date","now","lastDoneString","toLocaleDateString","endDateString","grow","keyframes","Task_templateObject","TaskWrapper","Task_templateObject2","index","TitleWrapper","Task_templateObject3","Title","_templateObject4","TopRowWrapper","_templateObject5","Task","_ref2","description","ItemActionsContainer","Task_Subtitles","Number","Task_ProgressBar","OverviewWrapper","Overview_templateObject","Overview","getTasksWithProgress","getProgress","ceil","_this","tasks","map","task","_this2","this","setInterval","forceUpdate","getNextDueDate","sort","b","_this3","sortedTasks","sortTasks","Overview_Task_Task","assign","key","onFinishTask","React","Component","defaultProps","GET_TASK","task_templateObject","GET_TASKS","task_templateObject2","CREATE_TASK","task_templateObject3","UPDATE_TASK","task_templateObject4","DELETE_TASK","task_templateObject5","data","fadeInAnimation","ModalWrapper_templateObject","ModalWrapper","ModalWrapper_templateObject2","propTypes","PropTypes","string","Backdrop","ModalBackdrop_templateObject","zIndex","ModalBackdrop_templateObject2","ModalBackdrop_templateObject3","LoadingSpinnerWrapper","Modal_templateObject","ModalSizes","auto","small","medium","large","Modal","isOngoingBackdropClick","stopPropagation","event","stopPropagationAndResetBackdropClick","startBackdropClick","finishBackdropClick","preventDefault","onBackdropClick","ModalBackdrop","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","Base_ModalWrapper","onKeyDown","fullscreen","overflow","tabIndex","onAnimationEnd","onReady","loading","CircularProgress_default","children","span","ModalHeader_templateObject","PROFILE_IMAGES","Sarah","Portrait2","Hauke","Portrait1","Ben","Portrait3","UserCard","UserCard_templateObject","PortraitWrapper","UserCard_templateObject2","UserPortrait","UserCard_templateObject3","image","UserName","UserCard_templateObject4","NameWrapper","UserCard_templateObject5","FinishTask_UserCard","ContentWrapper","FinishTask_templateObject","FinishTask","onFinish","then","onClose","taskName","users","Base_Modal","ModalHeader","user","GET_USERS","user_templateObject","_ref$data","IntervalSelection","IntervalSelection_templateObject","ElementWrapper","IntervalSelection_templateObject2","intervalCountOptions","intervalUnitOptions","MutateTask_IntervalSelection","onChangeIntervalUnit","onChangeIntervalCount","Select_default","autoWidth","onChange","value","option","MenuItem_default","ButtonContainer","ButtonRow_templateObject","showConfirm","ButtonGroup","ButtonRow_templateObject2","LeftButtonsContainer","ButtonRow_templateObject3","ButtonRow","onSubmit","buttonTitle","onDelete","showDelete","_useState","useState","_useState2","slicedToArray","setShowConfirm","Button_default","variant","MutateTask_templateObject","CreateTask","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeDescription","setState","target","error","state","onDeleteTask","_getIntervalInUnits","prevProps","modalTitle","MutateTask_ContentWrapper","Input_default","placeholder","autoFocus","required","fullWidth","withTheme","withStaticProps","staticProps","options","update","proxy","createTask","readQuery","query","push","writeQuery","deleteTask","filter","_ref3","MutateTask","modal","onCloseModal","currentModal","modalPayload","CurrentModal","UpdateTask","getCurrentModal","rotate","AddTaskButton_templateObject","rotateAnimation","AddTaskButton_templateObject2","Wrapper","AddTaskButton_templateObject3","animationActive","AddTaskButton","setIsAnimationActive","createMuiTheme","palette","primary","indigo","secondary","red","status","danger","typography","useNextVariants","App","MuiThemeProvider_default","theme","muiTheme","App_App","OverviewContainer","ModalsContainer","AddTaskButtonContainer","Boolean","window","location","hostname","match","defaults","__typename","resolvers","Mutation","_","cache","writeData","httpLink","HttpLink","uri","InMemoryCache","stateLink","withClientState","client","ApolloClient","link","ApolloLink","from","ReactDOM","render","react_apollo_esm","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb57bdfb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/torben.e8dab1f1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/antje.94bc87cf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/opa.4731ff40.jpg\";","export const colors = {\n  primary: \"#5579ff\",\n  lightGray: \"#f5f5f5\",\n  success: \"#6dd84a\",\n};\n","import styled from \"styled-components\";\nimport { colors } from \"../../constants/styles\";\n\nexport default styled.div`\n  height: 100%;\n  width: 100%;\n  background-color: ${colors.lightGray};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport MaterialIcon from \"material-icons-react\";\n\nconst DEFAULT_SIZE = 32;\n\nconst IconWrapper = styled.div`\n  width: 40px;\n  height: 40px;\n  padding: 2px;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  user-select: none;\n`;\n\nconst IconHeight = styled.div`\n  height: 26px;\n`;\n\nconst IconButton = ({\n  icon,\n  color,\n  onClick,\n  className,\n  size = DEFAULT_SIZE,\n}) => (\n  <IconWrapper onClick={onClick} className={className}>\n    <IconHeight>\n      <MaterialIcon icon={icon} size={size} color={color} />\n    </IconHeight>\n  </IconWrapper>\n);\n\nexport default IconButton;\n","import { css } from \"styled-components\";\n\nexport const ButtonAnimation = css`\n  @media (hover: hover) {\n    &:hover {\n      background-color: #dedede;\n      transition: background-color 0.2s;\n    }\n  }\n\n  &:active {\n    background-color: #ccc;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"../Icon\";\nimport { ButtonAnimation } from \"./Animations\";\n\nconst IconButtonComponent = styled(Icon)`\n  border-radius: 50%;\n  cursor: pointer;\n  ${ButtonAnimation}\n`;\n\nconst IconButton = ({ icon, onClick }) => (\n  <IconButtonComponent onClick={onClick} icon={icon} size={32} />\n);\n\nexport default IconButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport IconButton from \"../../General/Buttons/IconButton\";\n\nconst ItemActionsWrapper = styled.div`\n  height: 60px;\n  width: calc(50% - 32px);\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ItemActions = ({ openModal, taskId }) => {\n  const onClick = name => {\n    openModal({ variables: { name, payload: { _id: taskId } } });\n  };\n\n  return (\n    <ItemActionsWrapper>\n      <IconButton icon=\"create\" onClick={() => onClick(\"UPDATE_TASK\")} />\n      <IconButton icon=\"check\" onClick={() => onClick(\"FINISH_TASK\")} />\n    </ItemActionsWrapper>\n  );\n};\n\nexport default ItemActions;\n","import gql from \"graphql-tag\";\n\nexport const GET_CURRENT_MODAL = gql`\n  query getCurrentModal {\n    modal @client {\n      currentModal\n      modalPayload {\n        _id\n      }\n    }\n  }\n`;\n\nexport const CLOSE_MODAL = gql`\n  mutation closeModal {\n    currentModal(name: null) @client\n  }\n`;\n\nexport const OPEN_MODAL = gql`\n  mutation openModal($name: String!, $payload: Object) {\n    currentModal(name: $name, payload: $payload) @client\n  }\n`;\n","import { graphql, compose } from \"react-apollo\";\n\nimport ItemActions from \"./ItemActions\";\nimport { OPEN_MODAL } from \"../../../queries/modal\";\n\nexport default compose(\n  graphql(OPEN_MODAL, {\n    name: \"openModal\",\n  })\n)(ItemActions);\n","import { TIME_UNITS } from \"../constants/global\";\n\nconst HOUR_IN_MILLIES = 60 * 60 * 1000;\nexport const DAY_IN_MILLIES = 24 * HOUR_IN_MILLIES;\nconst WEEK_IN_MILLIES = 7 * DAY_IN_MILLIES;\nconst MONTH_IN_MILLIES = 30 * DAY_IN_MILLIES;\n\nconst TIME_MAPPING = {\n  [TIME_UNITS.DAY]: DAY_IN_MILLIES,\n  [TIME_UNITS.WEEK]: WEEK_IN_MILLIES,\n  [TIME_UNITS.MONTH]: MONTH_IN_MILLIES,\n};\n\nconst DEFAULT_INTERVAL = { intervalUnit: TIME_UNITS.WEEK, intervalCount: 2 };\n\nexport const getIntervalInMillies = (intervalCount, intervalUnit) => {\n  return String((intervalCount * TIME_MAPPING[intervalUnit]) / 1000);\n  // return String(intervalCount * TIME_MAPPING[intervalUnit]);\n};\n\nconst intervalMap = {};\nfor (let intervalCount = 1; intervalCount < 7; intervalCount++) {\n  for (let j = 0; j < 3; j++) {\n    const intervalUnit = Object.values(TIME_UNITS)[j];\n    const interval = getIntervalInMillies(intervalCount, intervalUnit);\n    intervalMap[interval] = { intervalUnit, intervalCount };\n  }\n}\n\nexport const getIntervalInUnits = interval => {\n  return intervalMap[interval] || DEFAULT_INTERVAL;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FULL_PROGRESS = 100;\nconst MAX_PROGRESS = 200;\nconst HUE_RANGE = 120;\nconst MIN_LIGHT = 25;\nconst MAX_LIGHT = 45;\n\nconst getColorFromProgress = progress => {\n  const slicedProgress = Math.min(progress, MAX_PROGRESS);\n  const hue = ((MAX_PROGRESS - slicedProgress) / MAX_PROGRESS) * HUE_RANGE;\n  const minLight =\n    MAX_LIGHT -\n    ((slicedProgress - FULL_PROGRESS) / (MAX_PROGRESS - FULL_PROGRESS)) *\n      MIN_LIGHT;\n  const light = Math.min(45, minLight);\n  return `hsl(${hue}, 100%, ${light}%)`;\n};\n\nconst ProgressBarWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  margin: 32px 0 16px 0;\n`;\n\nconst ContdownBar = styled.div`\n  height: 30px;\n  width: 100%;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n`;\n\nconst RemainingTime = styled.div.attrs(props => ({\n  style: {\n    width: `${props.progress}%`,\n    backgroundColor: getColorFromProgress(props.progress),\n  },\n}))`\n  height: 100%;\n  max-width: 100%;\n  border-radius: 5px;\n`;\n\nconst ProgressBar = ({ progress }) => {\n  return (\n    <ProgressBarWrapper>\n      <ContdownBar>\n        <RemainingTime progress={progress} />\n      </ContdownBar>\n    </ProgressBarWrapper>\n  );\n};\n\nexport default ProgressBar;\n","export const TIME_UNITS = {\n  DAY: \"Tage\",\n  WEEK: \"Wochen\",\n  MONTH: \"Monate\",\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { DAY_IN_MILLIES } from \"../../../utils/time\";\n\nconst SubtitlesWrapper = styled.div`\n  display: inline-block;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Subtitle = styled.div`\n  color: #888;\n  width: 100%;\n  display: flex;\n  font-size: 14px;\n  margin-right: 5px\n  justify-content: space-between;\n  max-width: 24rem\n`;\n\nconst Substring = styled.div`\n  ${props => (props.bold ? \"font-weight: bold;\" : \"\")}\n`;\n\nconst DATE_LOCATION = \"de-DE\";\nconst DATE_FORMATTING_OPTIONS = {\n  weekday: \"long\",\n  month: \"long\",\n  day: \"numeric\",\n};\nconst DATE_HOUR_FORMATTING_OPTIONS = {\n  ...DATE_FORMATTING_OPTIONS,\n  hour: \"numeric\",\n  minute: \"numeric\",\n};\n\nconst Subtitles = ({ lastDone, interval }) => {\n  const showHours = lastDone + interval < Date.now() + DAY_IN_MILLIES;\n\n  const dateFormattingOptions = showHours\n    ? DATE_HOUR_FORMATTING_OPTIONS\n    : DATE_FORMATTING_OPTIONS;\n\n  const lastDoneString = new Date(lastDone).toLocaleDateString(\n    DATE_LOCATION,\n    dateFormattingOptions\n  );\n\n  const endDateString = new Date(lastDone + interval).toLocaleDateString(\n    DATE_LOCATION,\n    dateFormattingOptions\n  );\n\n  return (\n    <SubtitlesWrapper>\n      <Subtitle>\n        <Substring>Zuletzt erledigt:</Substring>\n        <Substring bold>{lastDoneString}</Substring>\n      </Subtitle>\n      <Subtitle>\n        <Substring>Zu erledigen bis:</Substring>\n        <Substring bold>{endDateString}</Substring>\n      </Subtitle>\n    </SubtitlesWrapper>\n  );\n};\n\nexport default Subtitles;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport ItemActions from \"./ItemActionsContainer\";\nimport ProgressBar from \"./ProgressBar\";\nimport Subtitles from \"./Subtitles\";\n\nconst grow = keyframes`\n  0% {\n    transform:  scale(0.5);\n  }\n  80% {\n    transform:  scale(1.2);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\n\nconst TaskWrapper = styled.div`\n  flex: 1;\n  margin: 10px;\n  display: flex;\n  padding: 24px;\n  flex-wrap: wrap;\n  min-width: 250px;\n  border-radius: 5px;\n  background-color: #fff;\n  border: 2px solid #e7e7e7;\n  order: ${({ index }) => index};\n  box-shadow: 3px 3px 10px -2px #ddd;\n\n  animation: ${grow} 0.3s linear;\n\n  &:nth-last-child(-n + 3) {\n    min-width: 40%;\n  }\n`;\n\nconst TitleWrapper = styled.div`\n  width: 150px;\n  overflow-x: hidden;\n`;\n\nconst Title = styled.div`\n  font-size: 24px;\n  margin: 0 0 12px 0;\n`;\nconst TopRowWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Task = ({ description, progress, index, lastDone, interval, _id }) => (\n  <TaskWrapper index={index}>\n    <TopRowWrapper>\n      <TitleWrapper>\n        <Title>{description}</Title>\n      </TitleWrapper>\n      <ItemActions taskId={_id} />\n    </TopRowWrapper>\n    <Subtitles lastDone={Number(lastDone)} interval={Number(interval)} />\n    <ProgressBar progress={progress} />\n  </TaskWrapper>\n);\n\nexport default Task;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Task from \"./Task/Task\";\n\nconst OverviewWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row-reverse;\n  flex-wrap: wrap-reverse;\n  align-content: stretch;\n`;\n\nclass Overview extends React.Component {\n  componentDidMount() {\n    setInterval(() => this.forceUpdate(), 1000);\n  }\n\n  getTasksWithProgress = () => {\n    const getProgress = ({ lastDone, interval }) =>\n      Math.ceil(((Date.now() - lastDone) / interval) * 100);\n\n    return this.props.tasks.map(task => ({\n      ...task,\n      progress: getProgress(task),\n    }));\n  };\n\n  sortTasks(tasks) {\n    const getNextDueDate = ({ interval, lastDone }) =>\n      Number(interval) + Number(lastDone);\n\n    return tasks.sort((a, b) => getNextDueDate(b) - getNextDueDate(a));\n  }\n\n  render() {\n    const tasks = this.getTasksWithProgress();\n    const sortedTasks = this.sortTasks(tasks);\n\n    return (\n      <OverviewWrapper>\n        {sortedTasks.map((task, index) => (\n          <Task\n            {...task}\n            index={index}\n            key={task._id}\n            onFinishTask={this.props.onFinishTask}\n          />\n        ))}\n      </OverviewWrapper>\n    );\n  }\n}\n\nOverview.defaultProps = {\n  tasks: [],\n};\n\nexport default Overview;\n","import gql from \"graphql-tag\";\n\nexport const GET_TASK = gql`\n  query getTask($_id: ID!) {\n    task(_id: $_id) {\n      lastDone\n      interval\n      description\n    }\n  }\n`;\nexport const GET_TASKS = gql`\n  query getTasks {\n    tasks {\n      _id\n      lastDone\n      interval\n      description\n    }\n  }\n`;\n\nexport const CREATE_TASK = gql`\n  mutation createTask($description: String!, $interval: String!) {\n    createTask(task: { description: $description, interval: $interval }) {\n      description\n      interval\n      lastDone\n      _id\n    }\n  }\n`;\n\nexport const UPDATE_TASK = gql`\n  mutation updateTask($_id: ID!, $interval: String!, $description: String!) {\n    updateTask(\n      _id: $_id\n      task: { description: $description, interval: $interval }\n    ) {\n      description\n      interval\n      lastDone\n      _id\n    }\n  }\n`;\n\nexport const DELETE_TASK = gql`\n  mutation deleteTask($_id: ID!) {\n    deleteTask(_id: $_id) {\n      _id\n    }\n  }\n`;\n","import { graphql, compose } from \"react-apollo\";\n\nimport Overview from \"./Overview\";\nimport { GET_TASKS } from \"../../queries/task\";\n\nexport default compose(\n  graphql(GET_TASKS, {\n    props: ({ data: { tasks } }) => ({\n      tasks,\n    }),\n  })\n)(Overview);\n","import styled, { keyframes } from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst fadeInAnimation = keyframes`\n  0% {\n    transform: translate(-50%, -50%) scale(0.8);\n  }\n\n  100% {\n    transform: translate(-50%, -50%) scale(1);\n  }\n`;\n\nconst ModalWrapper = styled.div`\n  position: absolute;\n  user-select: text;\n  border-radius: 12px;\n  background: white;\n  padding: 16px;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  height: auto;\n  width: ${({ width }) => width};\n  max-width: 85%;\n  animation: ${fadeInAnimation};\n  animation-duration: 0.3s;\n  animation-fill-mode: forwards;\n  outline: none;\n  overflow: hidden;\n`;\n\nModalWrapper.propTypes = {\n  width: PropTypes.string,\n};\n\nModalWrapper.defaultProps = {\n  width: \"auto\",\n};\n\nexport default ModalWrapper;\n","import styled, { keyframes } from \"styled-components\";\n\nconst Backdrop = styled.div`\n  position: fixed;\n  user-select: none;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  z-index: ${({ zIndex }) => zIndex};\n`;\n\nBackdrop.defaultProps = {\n  zIndex: 100,\n  backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n};\n\nconst fadeInAnimation = keyframes`\n    0% {\n        background-color: rgba(0, 0, 0, 0);\n    }\n    100% {\n        background-color: rgba(0, 0, 0, 0.7);\n    }\n`;\n\nexport default styled(Backdrop)`\n  animation: ${fadeInAnimation};\n  animation-duration: 0.7s;\n  animation-fill-mode: forwards;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport ModalWrapper from \"./ModalWrapper\";\nimport ModalBackdrop from \"./ModalBackdrop\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst LoadingSpinnerWrapper = styled.div`\n  display: flex;\n  width: 100%\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  min-height: 150px;\n  min-width: 150px;\n`;\n\nconst ModalSizes = {\n  auto: \"auto\",\n  small: \"400px\",\n  medium: \"800px\",\n  large: \"1200px\",\n};\n\nclass Modal extends React.Component {\n  isOngoingBackdropClick = false;\n\n  stopPropagation = event => {\n    event.stopPropagation();\n  };\n\n  stopPropagationAndResetBackdropClick = event => {\n    this.stopPropagation(event);\n    this.isOngoingBackdropClick = false;\n  };\n\n  startBackdropClick = event => {\n    this.isOngoingBackdropClick = true;\n  };\n\n  finishBackdropClick = event => {\n    event.preventDefault();\n    if (this.isOngoingBackdropClick) {\n      this.props.onBackdropClick(event);\n      this.isOngoingBackdropClick = false;\n    }\n  };\n\n  render() {\n    return (\n      <ModalBackdrop\n        zIndex={this.props.zIndex}\n        onMouseDown={this.startBackdropClick}\n        onMouseUp={this.finishBackdropClick}\n        onTouchStart={this.startBackdropClick}\n        onTouchEnd={this.finishBackdropClick}\n      >\n        <ModalWrapper\n          width={ModalSizes[this.props.size]}\n          onKeyDown={this.props.onKeyDown}\n          onClick={this.stopPropagation}\n          onMouseDown={this.stopPropagation}\n          onMouseUp={this.stopPropagationAndResetBackdropClick}\n          onTouchStart={this.stopPropagation}\n          onTouchEnd={this.stopPropagationAndResetBackdropClick}\n          fullscreen={this.props.fullscreen}\n          overflow={this.props.overflow}\n          tabIndex={0}\n          onAnimationEnd={() => {\n            this.props.onReady();\n          }}\n        >\n          {this.props.loading ? (\n            <LoadingSpinnerWrapper>\n              <CircularProgress />\n            </LoadingSpinnerWrapper>\n          ) : (\n            this.props.children\n          )}\n        </ModalWrapper>\n      </ModalBackdrop>\n    );\n  }\n}\n\nModal.propTypes = {\n  size: PropTypes.string,\n  zIndex: PropTypes.number,\n  onBackdropClick: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onReady: PropTypes.func,\n  fullscreen: PropTypes.bool,\n  overflow: PropTypes.string,\n};\n\nModal.defaultProps = {\n  fullscreen: false,\n  size: \"small\",\n  zIndex: 1000,\n  onBackdropClick: () => {},\n  onKeyDown: () => {},\n  onReady: () => {},\n  overflow: \"auto\",\n};\n\nexport default Modal;\n","import styled from \"styled-components\";\n\nexport default styled.span`\n  width: 100%;\n  font-weight: bold;\n  font-size: 24px;\n  display: flex;\n  justify-content: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Portrait1 from \"../../../assets/portraits/torben.jpg\";\nimport Portrait2 from \"../../../assets/portraits/antje.jpg\";\nimport Portrait3 from \"../../../assets/portraits/opa.jpg\";\n\nconst PROFILE_IMAGES = {\n  Sarah: Portrait2,\n  Hauke: Portrait1,\n  Ben: Portrait3,\n};\n\nconst UserCard = styled.div`\n  height: 35vw;\n  width: 30vw;\n  max-height: 70vh;\n  max-width: 50vh;\n  margin: 1vw;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  border-radius: 15px;\n  box-shadow: 0px 0px 9px 2px #afafaf;\n  cursor: pointer;\n  user-select: none;\n\n  @media (hover: hover) {\n    &:hover {\n      transform: scale(0.98);\n      transition: transform 0.2s;\n    }\n  }\n\n  &:active {\n    transform: scale(0.96);\n    transition: transform 0.2s;\n  }\n`;\n\nconst PortraitWrapper = styled.div`\n  height: 70%;\n  width: 70%;\n  border-radius: 50%;\n  overflow: hidden;\n`;\n\nconst UserPortrait = styled.div`\n  height: 100%;\n  background: url(${({ image }) => image}) no-repeat 50% 50%;\n  background-size: cover;\n`;\n\nconst UserName = styled.span`\n  font-size: calc((4vw + 4vh) / 2);\n`;\n\nconst NameWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 15%;\n`;\n\nexport default ({ name }) => {\n  return (\n    <UserCard>\n      <PortraitWrapper>\n        <UserPortrait image={PROFILE_IMAGES[name]} />\n      </PortraitWrapper>\n      <NameWrapper>\n        <UserName>{name}</UserName>\n      </NameWrapper>\n    </UserCard>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport BaseModal from \"../Base/Modal.js\";\nimport ModalHeader from \"../Base/ModalHeader\";\nimport UserCard from \"./UserCard\";\n\nconst ContentWrapper = styled.div`\n  margin-top: 24px;\n  overflow: hidden;\n  display: flex;\n`;\n\nclass FinishTask extends React.Component {\n  onFinish = () => {\n    this.props\n      .onFinish({ variables: { _id: this.props._id } })\n      .then(this.props.onClose);\n  };\n\n  render() {\n    const taskName = this.props.task ? this.props.task.description : \"Aufgabe\";\n    const users = this.props.users.data || [];\n\n    return (\n      <BaseModal\n        onBackdropClick={this.props.onClose}\n        loading={this.props.users.loading}\n        size=\"auto\"\n      >\n        <ModalHeader>{taskName} abschließen</ModalHeader>\n        <ContentWrapper>\n          {users.map(user => (\n            <UserCard key={user.name} {...user} />\n          ))}\n        </ContentWrapper>\n      </BaseModal>\n    );\n  }\n}\n\nexport default FinishTask;\n","import gql from \"graphql-tag\";\n\nexport const GET_USERS = gql`\n  query getUsers {\n    users {\n      _id\n      name\n    }\n  }\n`;\n","import { graphql, compose } from \"react-apollo\";\n\nimport FinishTask from \"./FinishTask\";\nimport { UPDATE_TASK, GET_TASK } from \"../../../queries/task\";\nimport { GET_USERS } from \"../../../queries/user\";\n\nexport default compose(\n  graphql(UPDATE_TASK, {\n    name: \"onFinish\",\n  }),\n  graphql(GET_USERS, {\n    props: ({ data: { users, loading } }) => ({\n      users: { data: users, loading },\n    }),\n  }),\n  graphql(GET_TASK, {\n    props: ({ data: { task } }) => ({ task }),\n  })\n)(FinishTask);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { TIME_UNITS } from \"../../../constants/global\";\n\nconst IntervalSelection = styled.div`\n  margin-top: 24px;\n  display: flex;\n  font-size: 20px;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nconst ElementWrapper = styled.div`\n  width: 33.3%;\n  height: 100%;\n`;\n\nconst intervalCountOptions = [1, 2, 3, 4, 5, 6];\nconst intervalUnitOptions = Object.values(TIME_UNITS);\n\nexport default ({\n  onChangeIntervalUnit,\n  onChangeIntervalCount,\n  intervalCount,\n  intervalUnit,\n}) => {\n  return (\n    <IntervalSelection>\n      <ElementWrapper>\n        <span>Alle</span>\n      </ElementWrapper>\n      <ElementWrapper>\n        <Select\n          autoWidth\n          onChange={onChangeIntervalCount}\n          value={intervalCount}\n        >\n          {intervalCountOptions.map(option => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </Select>\n      </ElementWrapper>\n      <ElementWrapper>\n        <Select autoWidth onChange={onChangeIntervalUnit} value={intervalUnit}>\n          {intervalUnitOptions.map(option => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </Select>\n      </ElementWrapper>\n    </IntervalSelection>\n  );\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport IconButton from \"../../General/Buttons/IconButton\";\nimport Button from \"@material-ui/core/Button\";\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 200%;\n  transform: translateX(${({ showConfirm }) => (showConfirm ? \"-50%\" : \"0%\")});\n  margin-top: 24px;\n  height: 45px;\n  transition-property: transform;\n  transition-duration: 0.5s;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 50%;\n`;\n\nconst LeftButtonsContainer = styled.div`\n  display: flex;\n  justify-content: left;\n  height: 100%;\n  align-items: center;\n`;\n\nexport default ({ onClose, onSubmit, buttonTitle, onDelete, showDelete }) => {\n  const [showConfirm, setShowConfirm] = useState(false);\n\n  return (\n    <ButtonContainer showConfirm={showConfirm}>\n      <ButtonGroup>\n        <LeftButtonsContainer>\n          {showDelete && (\n            <IconButton icon=\"delete\" onClick={() => setShowConfirm(true)} />\n          )}\n          <Button color=\"secondary\" onClick={onClose}>\n            abbrechen\n          </Button>\n        </LeftButtonsContainer>\n        <Button color=\"primary\" onClick={onSubmit}>\n          {buttonTitle}\n        </Button>\n      </ButtonGroup>\n      <ButtonGroup>\n        <Button color=\"primary\" onClick={() => setShowConfirm(false)}>\n          zurück\n        </Button>\n        <Button color=\"secondary\" onClick={onDelete} variant=\"contained\">\n          aufgabe löschen\n        </Button>\n      </ButtonGroup>\n    </ButtonContainer>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { withTheme } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\n\nimport BaseModal from \"../Base/Modal.js\";\nimport ModalHeader from \"../Base/ModalHeader\";\nimport IntervalSelection from \"./IntervalSelection\";\nimport ButtonRow from \"./ButtonRow\";\n\nimport { getIntervalInMillies, getIntervalInUnits } from \"../../../utils/time\";\n\nconst ContentWrapper = styled.div`\n  margin-top: 24px;\n  overflow: hidden;\n`;\n\nclass CreateTask extends React.Component {\n  constructor(props) {\n    super(props);\n    const task = props.task || {};\n    const { intervalCount, intervalUnit } = getIntervalInUnits(task.interval);\n    this.state = {\n      description: task.description || \"\",\n      intervalCount,\n      intervalUnit,\n      error: false,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.task || !this.props.task) return;\n\n    this.setState({\n      description: this.props.task.description,\n      ...getIntervalInUnits(this.props.task.interval),\n    });\n  }\n\n  onChangeDescription = event => {\n    this.setState({ description: event.target.value, error: false });\n  };\n\n  onChangeIntervalCount = event => {\n    this.setState({ intervalCount: event.target.value });\n  };\n\n  onChangeIntervalUnit = event => {\n    this.setState({ intervalUnit: event.target.value });\n  };\n\n  onSubmit = () => {\n    if (!this.state.description) {\n      this.setState({ error: true });\n      return;\n    }\n\n    const interval = getIntervalInMillies(\n      this.state.intervalCount,\n      this.state.intervalUnit\n    );\n\n    this.props\n      .onSubmit({\n        variables: {\n          interval,\n          description: this.state.description,\n          _id: this.props._id,\n        },\n      })\n      .then(this.props.onClose);\n  };\n\n  onDeleteTask = () => {\n    this.props\n      .onDelete({ variables: { _id: this.props._id } })\n      .then(this.props.onClose);\n  };\n\n  render() {\n    return (\n      <BaseModal onBackdropClick={this.props.onClose}>\n        <ModalHeader>{this.props.modalTitle}</ModalHeader>\n        <ContentWrapper>\n          <Input\n            placeholder=\"Was muss erledigt werden?\"\n            value={this.state.description}\n            onChange={this.onChangeDescription}\n            error={this.state.error && !this.state.description}\n            autoFocus={!this.props.onDelete}\n            required\n            fullWidth\n          />\n          <IntervalSelection\n            onChangeIntervalCount={this.onChangeIntervalCount}\n            onChangeIntervalUnit={this.onChangeIntervalUnit}\n            intervalCount={this.state.intervalCount}\n            intervalUnit={this.state.intervalUnit}\n          />\n          <ButtonRow\n            onDelete={this.onDeleteTask}\n            showDelete={!!this.props.onDelete}\n            onClose={this.props.onClose}\n            onSubmit={this.onSubmit}\n            buttonTitle={this.props.buttonTitle}\n          />\n        </ContentWrapper>\n      </BaseModal>\n    );\n  }\n}\n\nexport default withTheme()(CreateTask);\n","import React from \"react\";\n\nexport const withStaticProps = staticProps => Component => props => (\n  <Component {...props} {...staticProps} />\n);\n","import { graphql, compose } from \"react-apollo\";\n\nimport CreateTask from \"./MutateTask\";\nimport { CREATE_TASK, GET_TASKS } from \"../../../queries/task\";\nimport { withStaticProps } from \"../../../utils/apollo\";\n\nexport default compose(\n  graphql(CREATE_TASK, {\n    name: \"onSubmit\",\n    options: {\n      update: (proxy, { data: { createTask } }) => {\n        const data = proxy.readQuery({ query: GET_TASKS });\n        data.tasks.push(createTask);\n        proxy.writeQuery({ query: GET_TASKS, data });\n      },\n    },\n  }),\n  withStaticProps({\n    buttonTitle: \"Erstellen\",\n    modalTitle: \"Neue Aufgabe erstellen\",\n  })\n)(CreateTask);\n","import { graphql, compose } from \"react-apollo\";\n\nimport MutateTask from \"./MutateTask\";\nimport {\n  UPDATE_TASK,\n  GET_TASK,\n  DELETE_TASK,\n  GET_TASKS,\n} from \"../../../queries/task\";\nimport { withStaticProps } from \"../../../utils/apollo\";\n\nexport default compose(\n  graphql(UPDATE_TASK, {\n    name: \"onSubmit\",\n  }),\n  graphql(DELETE_TASK, {\n    name: \"onDelete\",\n    options: {\n      update: (proxy, { data: { deleteTask } }) => {\n        const data = proxy.readQuery({ query: GET_TASKS });\n        const tasks = data.tasks.filter(({ _id }) => _id !== deleteTask._id);\n        proxy.writeQuery({ query: GET_TASKS, data: { tasks } });\n      },\n    },\n  }),\n  graphql(GET_TASK, {\n    props: ({ data: { task } }) => ({ task }),\n  }),\n  withStaticProps({\n    buttonTitle: \"Übernehmen\",\n    modalTitle: \"Aufgabe bearbeiten\",\n  })\n)(MutateTask);\n","import { graphql, compose } from \"react-apollo\";\n\nimport Modals from \"./Modals\";\nimport { CLOSE_MODAL, GET_CURRENT_MODAL } from \"../../queries/modal\";\n\nexport default compose(\n  graphql(CLOSE_MODAL, { name: \"onCloseModal\" }),\n  graphql(GET_CURRENT_MODAL, {\n    props: ({ data: { modal } }) => modal,\n  })\n)(Modals);\n","import React from \"react\";\n\nimport FinishTask from \"./FinishTask/FinishTaskContainer\";\nimport CreateTask from \"./MutateTask/CreateTaskContainer\";\nimport UpdateTask from \"./MutateTask/UpdateTaskContainer\";\n\nconst getCurrentModal = currentModal => {\n  switch (currentModal) {\n    case \"FINISH_TASK\":\n      return FinishTask;\n    case \"CREATE_TASK\":\n      return CreateTask;\n    case \"UPDATE_TASK\":\n      return UpdateTask;\n    default:\n      return null;\n  }\n};\n\nexport default ({ onCloseModal, currentModal, modalPayload }) => {\n  const CurrentModal = getCurrentModal(currentModal);\n  if (!CurrentModal) return null;\n\n  return <CurrentModal onClose={onCloseModal} {...modalPayload} />;\n};\n","import React, { useState } from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\n\nimport Icon from \"../General/Icon.js\";\nimport { colors } from \"../../constants/styles\";\n\nconst rotate = keyframes`\n  0% {\n    transform: rotate(0deg) scale(1);\n  }\n\n  50% {\n    transform: rotate(45deg) scale(0.9);\n  }\n\n  100% {\n    transform: rotate(90deg) scale(1);\n  }\n`;\n\nconst rotateAnimation = css`\n  animation: ${rotate} 0.2s linear;\n`;\n\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 10px;\n  right: 10px;\n  border-radius: 50%;\n  background-color: ${colors.primary};\n  cursor: pointer;\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  ${({ animationActive }) => animationActive && rotateAnimation}\n`;\n\nconst AddTaskButton = ({ openModal }) => {\n  const [animationActive, setIsAnimationActive] = useState(false);\n\n  const onClick = () => {\n    openModal({ variables: { name: \"CREATE_TASK\" } });\n    setIsAnimationActive(true);\n  };\n\n  return (\n    <Wrapper\n      onClick={onClick}\n      animationActive={animationActive}\n      onAnimationEnd={() => setIsAnimationActive(false)}\n    >\n      <Icon icon=\"add\" color=\"#ddd\" />\n    </Wrapper>\n  );\n};\n\nexport default AddTaskButton;\n","import { graphql, compose } from \"react-apollo\";\n\nimport AddTaskButton from \"./AddTaskButton\";\nimport { OPEN_MODAL } from \"../../queries/modal\";\n\nexport default compose(\n  graphql(OPEN_MODAL, {\n    name: \"openModal\",\n  })\n)(AddTaskButton);\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport red from \"@material-ui/core/colors/red\";\n\nexport default createMuiTheme({\n  palette: {\n    primary: indigo,\n    secondary: red,\n  },\n  status: {\n    danger: \"orange\",\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n","import React from \"react\";\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\n\nimport AppWrapper from \"./App.js\";\nimport Overview from \"../Overview/OverviewContainer\";\nimport Modals from \"../Modals/ModalsContainer\";\nimport AddTaskButton from \"../AddTaskButton/AddTaskButtonContainer\";\n\nimport muiTheme from \"../../constants/materialStyles\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={muiTheme}>\n        <AppWrapper>\n          <Overview />\n          <Modals />\n          <AddTaskButton />\n        </AppWrapper>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { GET_CURRENT_MODAL } from \"../queries/modal\";\n\nexport const defaults = {\n  __typename: \"Query\",\n  modal: {\n    __typename: \"Modal\",\n    currentModal: null,\n    modalPayload: {\n      __typename: \"ModalPayload\",\n      _id: null,\n    },\n  },\n};\n\nexport const resolvers = {\n  Mutation: {\n    currentModal: (_, { name, payload }, { cache }) => {\n      const query = GET_CURRENT_MODAL;\n      const data = {\n        modal: {\n          ...defaults.modal,\n          currentModal: name,\n          modalPayload: { ...defaults.modal.modalPayload, ...payload },\n        },\n      };\n      cache.writeData({ query, data });\n      return null;\n    },\n  },\n};\n","import \"babel-polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { ApolloLink } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloClient } from \"apollo-client\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { withClientState } from \"apollo-link-state\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nimport \"./index.css\";\nimport App from \"./components/App/App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { defaults, resolvers } from \"./resolvers/\";\nimport { SERVER_URL } from \"./constants/api\";\n\nconst httpLink = new HttpLink({\n  uri: SERVER_URL,\n});\n\nconst cache = new InMemoryCache();\nconst stateLink = withClientState({ resolvers, cache, defaults });\n\nconst client = new ApolloClient({\n  link: ApolloLink.from([stateLink, httpLink]),\n  cache,\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n","const IS_DEV = process.env.NODE_ENV === \"development\";\n\nexport const SERVER_URL = IS_DEV\n  ? \"http://localhost:4000/graphql\"\n  : \"https://hauke.uber.space/api/graphql\";\n"],"sourceRoot":""}